###########################################
###     BlackLabel Bundles Routing      ###
###########################################
black_label_generic:
    resource: "@blackLabelGenericBundle/Resources/config/routing.yml"

black_label_import:
    resource: "@blackLabelImportBundle/Resources/config/routing.yml"

black_label_historique:
    resource: "@blackLabelHistoriqueBundle/Resources/config/routing.yml"

black_label_commentaire:
    resource: "@blackLabelCommentaireBundle/Resources/config/routing.yml"

###################################
###    FOSUser Custom Routing   ###
###################################
fos_admin_user_security_login:
    path:     /bo_login
    defaults: { _controller: whiteLabelBackOfficeBundle:Security:login }

fos_admin_user_security_check:
    path:     /bo_login_check
    defaults: { _controller: whiteLabelBackOfficeBundle:Security:check }
    requirements:
        _method: POST

fos_admin_user_security_logout:
    path:     /bo_logout
    defaults: { _controller: whiteLabelBackOfficeBundle:Security:logout }

################################
###     Dashboard Routing    ###
################################
bo_dashboard:
    path:     /bo/dashboard
    defaults: { _controller: whiteLabelBackOfficeBundle:Dashboard:index }

################################
###      Client Routing      ###
################################
client_list:
    path:     /client/list
    defaults: { _controller: whiteLabelBackOfficeBundle:Client:list }

client_create:
    path:     /client/create
    defaults: { _controller: whiteLabelBackOfficeBundle:Client:create }

client_read:
    path:     /client/read/{clientId}
    defaults: { _controller: whiteLabelBackOfficeBundle:Client:read }
    requirements:
        clientId: \d+

client_update:
    path:     /client/update/{clientId}
    defaults: { _controller: whiteLabelBackOfficeBundle:Client:update }
    requirements:
        clientId: \d+

client_delete:
    path:     /client/delete/{clientId}
    defaults: { _controller: whiteLabelBackOfficeBundle:Client:delete }
    requirements:
        clientId: \d+

################################
###     Homepage Routing     ###
################################
bo_homepage:
    path:     /bo/homepage/{clientId}
    defaults: { _controller: whiteLabelBackOfficeBundle:Homepage:index }
    requirements:
        clientId: \d+

################################
###       Lot Routing        ###
################################
lot_list:
    path:     /lot/list/{clientId}
    defaults: { _controller: whiteLabelBackOfficeBundle:Lot:list }
    requirements:
        clientId: \d+

lot_update:
    path:     /lot/update/{clientId}/{lotId}
    defaults: { _controller: whiteLabelBackOfficeBundle:Lot:update }
    requirements:
        clientId: \d+
        lotId: \d+

lot_delete:
    path:     /lot/delete/{clientId}/{lotId}
    defaults: { _controller: whiteLabelBackOfficeBundle:Lot:delete }
    requirements:
        clientId: \d+
        lotId: \d+

lot_export_noteDebit:
    path:     /lot/export/noteDebit/{clientId}/{lotId}
    defaults: { _controller: whiteLabelBackOfficeBundle:Lot:exportNoteDebit }
    requirements:
        clientId: \d+
        lotId: \d+

lot_export_BAT:
    path:     /lot/export/BAT/{clientId}/{lotNumero}
    defaults: { _controller: whiteLabelBackOfficeBundle:Lot:exportBAT }
    requirements:
        clientId: \d+
        lotNumero: \d+

################################
###       Prime Routing      ###
################################
prime_list:
    path:     /prime/list/{clientId}
    defaults: { _controller: whiteLabelBackOfficeBundle:Prime:list }
    requirements:
        clientId: \d+

prime_list_ajax:
    path:     /prime/list/ajax/{clientId}
    defaults: { _controller: whiteLabelBackOfficeBundle:Prime:listAjax }
    requirements:
        clientId: \d+

prime_read:
    path:     /prime/read/{clientId}/{primeId}
    defaults: { _controller: whiteLabelBackOfficeBundle:Prime:read }
    requirements:
        clientId: \d+
        primeId: \d+

prime_update:
    path:     /prime/update/{clientId}/{primeId}
    defaults: { _controller: whiteLabelBackOfficeBundle:Prime:update }
    requirements:
        clientId: \d+
        primeId: \d+

prime_update_rib:
    path:     /prime/update/RIB/{clientId}/{primeId}
    defaults: { _controller: whiteLabelBackOfficeBundle:Prime:updateRIB }
    requirements:
        clientId: \d+
        primeId: \d+

prime_update_address:
    path:     /prime/update/address/{clientId}/{primeId}
    defaults: { _controller: whiteLabelBackOfficeBundle:Prime:updateAddress }
    requirements:
        clientId: \d+
        primeId: \d+

prime_export_BAT:
    path:     /prime/export/BAT/{clientId}/{primeId}/{lotNumero}
    defaults: { _controller: whiteLabelBackOfficeBundle:Prime:exportBAT }
    requirements:
        clientId: \d+
        primeId: \d+
        lotNumero: \d+

################################
###  Modèle Lettre Routing   ###
################################
modeleLettre_list:
    path:     /modele/lettre/list/{clientId}
    defaults: { _controller: whiteLabelBackOfficeBundle:ModeleLettre:list }
    requirements:
        clientId: \d+

modeleLettre_create:
    path:     /modele/lettre/create/{clientId}
    defaults: { _controller: whiteLabelBackOfficeBundle:ModeleLettre:create }
    requirements:
        clientId: \d+

modeleLettre_read:
    path:     /modele/lettre/read/{clientId}/{modeleLettreId}
    defaults: { _controller: whiteLabelBackOfficeBundle:ModeleLettre:read }
    requirements:
        clientId: \d+
        modeleLettreId: \d+

modeleLettre_update:
    path:     /modele/lettre/update/{clientId}/{modeleLettreId}
    defaults: { _controller: whiteLabelBackOfficeBundle:ModeleLettre:update }
    requirements:
        clientId: \d+
        modeleLettreId: \d+

################################
###  Chèque Stock Routing    ###
################################
chequeStock_list:
    path:     /cheque/stock/list/{clientId}
    defaults: { _controller: whiteLabelBackOfficeBundle:Cheque:listStock }
    requirements:
        clientId: \d+

chequeStock_create:
    path:     /cheque/stock/create/{clientId}
    defaults: { _controller: whiteLabelBackOfficeBundle:Cheque:createStock }
    requirements:
        clientId: \d+

chequeStock_read:
    path:     /cheque/stock/read/{clientId}/{stockId}
    defaults: { _controller: whiteLabelBackOfficeBundle:Cheque:readStock }
    requirements:
        clientId: \d+
        stockId: \d+

chequeStock_update:
    path:     /cheque/stock/update/{clientId}/{stockId}
    defaults: { _controller: whiteLabelBackOfficeBundle:Cheque:updateStock }
    requirements:
        clientId: \d+
        stockId: \d+

################################
###   Chèque Item Routing    ###
################################
chequeItem_list:
    path:     /cheque/item/list/{clientId}/{stockId}
    defaults: { _controller: whiteLabelBackOfficeBundle:Cheque:listCheque, stockId: null }
    requirements:
        clientId: \d+
        stockId: \d+

################################
###     Chèque RP Routing    ###
################################
chequeRapprochementBancaire_create:
    path:     /cheque/rapprochement/bancaire/create/{clientId}
    defaults: { _controller: whiteLabelBackOfficeBundle:Cheque:createRapprochementBancaire }
    requirements:
        clientId: \d+
